
# import os
# import shutil
# import filecmp
#
#
# class File:
#     """
#     מחלקה לניהול קבצים ותיקיות עם פונקציות סטטיות שימושיות.
#     """
#
#     @staticmethod
#     def is_exist(name_folder_or_file, path):
#         """
#         בודקת האם קובץ או תיקייה קיימים בנתיב נתון.
#
#         :param name_folder_or_file: שם הקובץ או התיקייה.
#         :param path: הנתיב שבו מתבצעת הבדיקה.
#         :return: True אם קיים, אחרת False.
#         :raises ValueError: אם אחד הפרמטרים ריק.
#         """
#         if not name_folder_or_file or not path:
#             raise ValueError("שם הקובץ/תיקייה או הנתיב אינם יכולים להיות ריקים.")
#
#         return os.path.exists(os.path.join(path, name_folder_or_file))
#
#     @staticmethod
#     def current_path():
#         """
#         מחזירה את הנתיב הנוכחי של העבודה.
#
#         :return: מחרוזת הנתיב הנוכחי.
#         """
#         try:
#             return os.getcwd()
#         except Exception as e:
#             raise RuntimeError(f"שגיאה בקבלת הנתיב הנוכחי: {e}")
#
#     @staticmethod
#     def create_folder(name_folder, path):
#         """
#         יוצרת תיקייה בנתיב נתון.
#
#         :param name_folder: שם התיקייה ליצירה.
#         :param path: הנתיב שבו תיווצר התיקייה.
#         :raises ValueError: אם השם ריק או אם התיקייה כבר קיימת.
#         """
#         if not name_folder:
#             raise ValueError("שם התיקייה אינו יכול להיות ריק.")
#
#         folder_path = os.path.join(path, name_folder)
#         if os.path.exists(folder_path):
#             raise FileExistsError(f"התיקייה '{name_folder}' כבר קיימת בנתיב {path}.")
#
#         try:
#             os.mkdir(folder_path)
#         except Exception as e:
#             raise RuntimeError(f"שגיאה ביצירת התיקייה: {e}")
#
#     @staticmethod
#     def is_wit_folder(names):
#         """
#         מחפשת תיקיות בשם ".wit" ברשימה נתונה.
#
#         :param names: רשימה של שמות תיקיות.
#         :return: רשימה של שמות התיקיות בשם ".wit" בלבד.
#         """
#         if not names:
#             return []
#         return [name for name in names if name == ".wit"]
#
#     @staticmethod
#     def add_files(path1, path2):
#         """
#         מעתיקה קבצים ותיקיות מ-path1 ל-path2 תוך התעלמות מתיקיות ".wit".
#
#         :param path1: הנתיב שממנו יועתקו הקבצים.
#         :param path2: הנתיב שאליו יועתקו הקבצים.
#         :raises FileNotFoundError: אם path1 אינו קיים.
#         :raises RuntimeError: במקרה של שגיאה בהעתקה.
#         """
#         if not os.path.exists(path1):
#             raise FileNotFoundError(f"הנתיב {path1} אינו קיים.")
#
#         try:
#             shutil.copytree(path1, path2, ignore=File.is_wit_folder, dirs_exist_ok=True)
#         except Exception as e:
#             raise RuntimeError(f"שגיאה בהעתקת קבצים: {e}")
#
#     @staticmethod
#     def copy_file(source_path, destination_path):
#         """
#         מעתיקה קובץ מ-source_path ל-destination_path.
#
#         :param source_path: הנתיב של הקובץ המקורי.
#         :param destination_path: הנתיב של הקובץ המיועד.
#         :raises FileNotFoundError: אם הקובץ המקורי אינו קיים.
#         :raises RuntimeError: במקרה של שגיאה בהעתקה.
#         """
#         if not os.path.exists(source_path):
#             raise FileNotFoundError(f"הקובץ {source_path} אינו קיים.")
#
#         try:
#             shutil.copy(source_path, destination_path)
#         except Exception as e:
#             raise RuntimeError(f"שגיאה בהעתקת הקובץ: {e}")
#
#     @staticmethod
#     def is_equalls(file1, file2):
#         """
#         משווה בין שני קבצים.
#
#         :param file1: הנתיב לקובץ הראשון.
#         :param file2: הנתיב לקובץ השני.
#         :return: True אם הקבצים זהים, אחרת False.
#         :raises FileNotFoundError: אם אחד הקבצים אינו קיים.
#         :raises RuntimeError: במקרה של שגיאה בהשוואה.
#         """
#         if not os.path.exists(file1) or not os.path.exists(file2):
#             raise FileNotFoundError("אחד הקבצים אינו קיים.")
#
#         try:
#             return filecmp.cmp(file1, file2)
#         except Exception as e:
#             raise RuntimeError(f"שגיאה בהשוואת הקבצים: {e}")
